@* @page "/contact"
@using System.ComponentModel.DataAnnotations

<div class="min-h-screen bg-gradient-to-b from-gray-900 to-blue-900 text-white py-20">
    <div class="container mx-auto px-4 max-w-3xl">
        <h1 class="text-4xl font-bold text-center mb-12 animate-on-scroll opacity-0 translate-y-10">
            Get in Touch
        </h1>

        <div class="bg-gray-800 bg-opacity-50 rounded-lg p-8">
            <EditForm Model="@contactModel" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />

                <div class="space-y-6">
                    <div>
                        <label class="block text-sm font-medium mb-2">Name</label>
                        <InputText @bind-Value="contactModel.Name" 
                                 class="w-full px-4 py-2 rounded-lg bg-gray-700 border border-gray-600 focus:border-blue-500 focus:ring-2 focus:ring-blue-500" />
                        <ValidationMessage For="@(() => contactModel.Name)" class="text-red-400 text-sm mt-1" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium mb-2">Email</label>
                        <InputText @bind-Value="contactModel.Email" 
                                 class="w-full px-4 py-2 rounded-lg bg-gray-700 border border-gray-600 focus:border-blue-500 focus:ring-2 focus:ring-blue-500" />
                        <ValidationMessage For="@(() => contactModel.Email)" class="text-red-400 text-sm mt-1" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium mb-2">Company (Optional)</label>
                        <InputText @bind-Value="contactModel.Company" 
                                 class="w-full px-4 py-2 rounded-lg bg-gray-700 border border-gray-600 focus:border-blue-500 focus:ring-2 focus:ring-blue-500" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium mb-2">Project Type</label>
                        <InputSelect @bind-Value="contactModel.ProjectType" 
                                   class="w-full px-4 py-2 rounded-lg bg-gray-700 border border-gray-600 focus:border-blue-500 focus:ring-2 focus:ring-blue-500">
                            <option value="">Select a project type...</option>
                            <option value="Web Application">Web Application</option>
                            <option value="Mobile App">Mobile App</option>
                            <option value="Cloud Solution">Cloud Solution</option>
                            <option value="AI/ML Integration">AI/ML Integration</option>
                            <option value="Custom Software">Custom Software</option>
                            <option value="Other">Other</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => contactModel.ProjectType)" class="text-red-400 text-sm mt-1" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium mb-2">Message</label>
                        <InputTextArea @bind-Value="contactModel.Message" 
                                     class="w-full px-4 py-2 rounded-lg bg-gray-700 border border-gray-600 focus:border-blue-500 focus:ring-2 focus:ring-blue-500" 
                                     rows="5" />
                        <ValidationMessage For="@(() => contactModel.Message)" class="text-red-400 text-sm mt-1" />
                    </div>

                    <div class="text-center">
                        <button type="submit" 
                                class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-full transition duration-300">
                            Send Message
                        </button>
                    </div>
                </div>
            </EditForm>

            @if (showSuccessMessage)
            {
                <div class="mt-6 p-4 bg-green-600 bg-opacity-25 border border-green-500 rounded-lg text-center">
                    Thank you for reaching out! We'll get back to you shortly.
                </div>
            }
        </div>
    </div>
</div>

@code {
    private ContactModel contactModel = new();
    private bool showSuccessMessage = false;

    private async Task HandleValidSubmit()
    {
        // Here you would implement the logic to send the contact form data
        // For example, calling an API endpoint or sending an email
        
        // For demonstration, we'll just show a success message
        showSuccessMessage = true;
        contactModel = new ContactModel();
        StateHasChanged();

        // Reset success message after 5 seconds
        await Task.Delay(5000);
        showSuccessMessage = false;
        StateHasChanged();
    }
} *@